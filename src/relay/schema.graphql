# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
    query: Query
    mutation: Mutation
}

"Object representing a contact message"
type ContactType {
    clientName: String!
    createdAt: DateTime!
    email: String!
    id: ID!
    message: String!
    updatedAt: DateTime!
}

"Object representing a enquiry"
type EnquiryType {
    checkin: DateTime!
    checkout: DateTime!
    clientName: String!
    createdAt: DateTime!
    email: String!
    establishment: EstablishmentType!
    id: ID!
    updatedAt: DateTime!
}

"Object representing a establishment"
type EstablishmentType {
    createdAt: DateTime!
    description: String!
    email: String!
    enquiries: [EnquiryType!]
    googleLat: Float!
    googleLong: Float!
    id: ID!
    imageUrl: String!
    maxGuests: Int!
    name: String!
    price: Float!
    selfCatering: Boolean!
    updatedAt: DateTime!
}

type Mutation {
    "Adds a new enquiry"
    addEnquiry(data: NewEnquiryInput!): EnquiryType!
    "Adds a new establishment"
    addEstablishment(data: NewEstablishmentInput!): EstablishmentType!
    "Adds a new message"
    addMessage(data: NewContactInput!): ContactType!
    "Adds a new user"
    addUser(data: NewUserInput!): UserType!
    "Changes a users password"
    changePassword(id: ID!, password: String!): UserType!
    "Deletes a enquiry by ID"
    deleteEnquiry(id: ID!): EnquiryType!
    "Deletes a establishment by ID"
    deleteEstablishment(id: ID!): EstablishmentType!
    "Login a user"
    login(password: String!, username: String!): UserTypeWithToken!
    "Refreshes auth token"
    refreshAuthTokens(id: ID!, refreshToken: String!): TokensType!
    "Updates a enquiry by ID"
    updateEnquiry(data: UpdateEnquiryInput!): EnquiryType!
    "Updates a establishment by ID"
    updateEstablishment(data: UpdateEstablishmentInput!): EstablishmentType!
}

type Query {
    "Returns all enquiries"
    getAllEnquiries(withEstablishment: Boolean = false): [EnquiryType!]!
    "Returns all establishments"
    getAllEstablishments(withEnquiries: Boolean = false): [EstablishmentType!]!
    "Returns all messages"
    getAllMessages: [ContactType!]!
    "Returns all users"
    getAllUsers: [UserType!]!
    "Returns a enquiry by ID"
    getEnquiry(id: ID!, withEstablishment: Boolean = false): EnquiryType!
    "Returns a establishment by ID"
    getEstablishment(id: ID!, withEnquiries: Boolean = false): EstablishmentType!
    "Returns a message by ID"
    getMessage(id: ID!): ContactType!
    "Returns a user by ID"
    getUser(id: ID!): UserType!
}

"Object representing auth token and refresh token"
type TokensType {
    authToken: String!
    refreshToken: String!
}

"Object representing a user"
type UserType {
    accessLevel: Int!
    createdAt: DateTime!
    email: String!
    id: ID!
    updatedAt: DateTime!
    username: String!
    verified: Boolean!
}

"Object representing a user with auth token"
type UserTypeWithToken {
    authToken: String!
    user: UserType!
}

"New contact data"
input NewContactInput {
    clientName: String!
    email: String!
    message: String!
}

"New enquiry data"
input NewEnquiryInput {
    checkin: DateTime!
    checkout: DateTime!
    clientName: String!
    email: String!
    establishmentId: ID!
}

"New establishment data"
input NewEstablishmentInput {
    description: String!
    email: String!
    googleLat: Float!
    googleLong: Float!
    imageUrl: String!
    maxGuests: Float!
    name: String!
    price: Float!
    selfCatering: Boolean!
}

"New user data"
input NewUserInput {
    email: String!
    password: String!
    username: String!
}

"Update enquiry data"
input UpdateEnquiryInput {
    checkin: DateTime
    checkout: DateTime
    clientName: String
    id: ID!
}

"New establishment data"
input UpdateEstablishmentInput {
    description: String
    email: String
    googleLat: Float
    googleLong: Float
    id: ID!
    imageUrl: String
    maxGuests: Float
    name: String
    price: Float
    selfCatering: Boolean
}

"The javascript `Date` as string. Type represents date and time as the ISO Date string."
scalar DateTime
